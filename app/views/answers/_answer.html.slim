tr.answer class=(answer.best? ? "best" : nil) *{'item-id' => answer.id}
  td
    - cache [answer, "votes"] do
      = render partial: "shared/votes", locals: {resource: answer}

  td
    table
      tr 
        td 
          - if can? :mark_best, answer
            = button_to('Mark best', mark_best_answer_path(answer), remote: true, data: { type: :js }, class: (answer.best? ? "mark_best hide" : "mark_best"))
      
      - cache [answer, "body"] do
        tr 
          td
            strong Body: 
            = answer.body
        tr 
          td 
            strong Author: 
            = answer.author.email 
      
      - if answer.files.attached?
          tr
            td 
              strong Attachments: 
              br
              - answer.files.each do |file|
                = link_to file.filename.to_s, url_for(file)
                br

      - cache [answer, "links"] do
        - if answer.links.present?
          tr
            td
              table.links
                thead 
                  tr 
                    th = "Links:"
                - answer.links.each do |link|
                  tr 
                    td = link_to link.title, link.url, target: "_blank", data: (link.gist? ? {'gist-id' => link.gist_id} : '')

      tr
        td 
          - if can? :update, answer
            = button_to('Edit answer', edit_answer_path(answer), method: :get)
          - if can? :destroy, answer
            = button_to('Delete answer', answer_path(answer), method: :delete, remote: true, data: { confirm: "Are you sure?" }, class: "delete_answer")

      tr
        td
          table
            tr
              - cache [answer, "comments"] do
                td 
                  table.table.bordered.comments
                    - if answer.comments.present?
                      = render partial: 'comments/comment', collection: answer.comments
            tr
              - if current_user.present?
                - cache [answer, "new_comment_form"] do
                  = render partial: "comments/form", locals: {commentable: answer}
    
